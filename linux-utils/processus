#--------------------------PROCESSUS--------------------------
#http://wawadeb.crdp.ac-caen.fr/iso/tmp/ressources/linux/www.ac-creteil.fr/reseaux/systemes/linux/processus.html
#http://dept-info.labri.fr/~magoni/teleinfo/TP1-cours-sockets.pdf

#Display all processus from john.wick
top -u john.wick
#Output
PID    USER     PR   NI  VIRT    RES    SHR  S   %CPU %MEM   TIME+ COMMAND
20737 mael.na+  20   0  162156   2508   1608 R   0,7  0,1   0:10.98 top
20375 mael.na+  20   0  154996   2724   1244 S   0,0  0,1   0:00.25 sshd
20376 mael.na+  20   0  118872   5480   1812 S   0,0  0,1   0:00.18 bash
20391 mael.na+  20   0  154696   2400   1060 S   0,0  0,1   0:00.00 sshd
20392 mael.na+  20   0  154696   2072    724 S   0,0  0,1   0:00.00 sshd

#Display processus
ps -aef

#Output
UID          PID  PPID  C STIME      TTY     TIME    COMMAND  
root         1    0     0 Dec 6      ?       1:02    init  
...  
john.wick    319 300    0 10:30:30   ?       0:02    /usr/dt/bin/dtsession  
bryan.mills  321 319    0 10:30:34   ttyp1   0:02    csh  
jason.bourne 324 321    0 10:32:12   ttyp1   0:00    ps -ef

#UID : userID of the process
#PID : processID
#PPID : parent processID
#C : priority factor
#STIME :  Date of birth
#TTY : terminal name
#TIME : time since processus running
#COMMAND : name of processus.

#Display all current processes
ps ax | less

#Display the process ID of a running program
pidof dockerd
#Output
656

#Count httpd processes
pidof httpd | wc -w
#OR
pgrep -c 'httpd|apache2'
#Output
21

#Start in background (killed when terminal exit)
<command> &
#Example
sleep 3000 &
#Output
8276

#Display information about the previous background process
ps -p 8276
#Output
PID     TTY     TIME        CMD
8276    pts/1   00:00:00    sleep

#Display processes (ancestors to children)
# -u : user who launched it
# -p : pid of the process
pstree
pstree -up | less


#What is a daemon ?
An process running in background and not interactive (no TTY)
They are the processes which run in the background and are not interactive. They have no controlling terminal
They perform certain actions at predefined times or in response to certain events

#Example
    initd
    systemd
    dockerd
    somethingd

#What is a process ?
One or more threads of execution together with their shared set of resources.

#Example
    A shell script or a cmd (background or foreground for performance)

#What is a service ?
A service can be multiple processes
#Example
    httpd is a service
    But you can have 10-20 apache processes runnning in background (handling requests)
    ssh, web server, database server, system logger

#What is a socket ?
A bidirectional point of communication through which a processus will emit/receive information.
Sockets are not the only way of communication between processus.
But it is very used.

#What is a Unix socket ?
Inter-process communication (IPC) running on the same host.
Use the filesystem
#Example
/var/run/docker.sock (for docker)

#What is an IP socket ?
IPC running over the network (often TCP/IP)

#How to define a socket ?
#C programming
    #include<sys/types.h>
    #include<sys/socket.h>
    int socket(
    int domaine, /* AF_UNIX ou AF_INET */
    int type, /* SOCK_DGRAM ou SOCK_STREAM */
    int protocole /* 0 : protocole par defaut */
    );

#What is domain ?
Domain specifies the adress system used and low-levve protocol.
AF_UNIX => local communication (files)
AF_INET => IPv4 (Internet Protocol version4) (32 bits)
AF_INET6 => IPv6 (Internet Protocol version6) (128 bits)


#What is a socket descriptor ?
Sockets can be used on UNIX and in a lot of system or machines.

#What if OSI model ?
OSI => Open Systems Interconnection
Developed by => International Organization of Standardization
Creation => 1984

#Simplified version
7 Application Layer (Telnet, FTP, Browser..)
6 Presentation Layer
5 Session Layer
4 Transport Layer (TCP, UDP)
3 Network Layer (IP)
2 Data Link Layer (Ethernet)
1 Physical Layer (Coaxial cables, fiber...)

#What is OSI model goal ?
Standardize with rules for comunications

#https://openclassrooms.com/fr/courses/857447-apprenez-le-fonctionnement-des-reseaux-tcp-ip/851376-brancher-les-machines-la-couche-1

#What is the layer for sockets ?
Sockets are in Layer 4 (Transport)

#What kind of sockets exist ?
Socket Network
    local adress (IP and port)
    distant adress
    network layer (IPv4, IPv6...)
    transport layer(TCP, UDP...)
Socket UNIX
    Use filesystem as namespace
Socket RAW

#Why using UNIX socket ?
Addressed as files
Allowes us to use file permission for access control
Unix sockets are created by socket sys call (while FIFO created by mkfifo)
#--------------------------USERS--------------------------

#Add a user named john.wick
adduser john.wick
#OR (non-interactive)
useradd john.wick

#Force user john.wick to change his password
passwd -e john.wick

#Add password to user john.wick
passwd john.wick

#Display all users (with details)
less /etc/passwd
#Output :
       john.wick:x:1000:1000:nice,strong,trustworthy,human:/home/john.wick:/bin/bash
           |     |   |    |    |     |                      |               |
           |     |   |    |    |     |                      |               Login shell
           |     |   |    |    |     |                      Home directory
           |     |   |    |    GECOS fields (full name, etc.)
           |     |   |    Primary Group id (GID stored in /etc/group file)
           |     |   User ID (UID  for example 0 is reserved for root)
           |     Encrypted password indicator (stored in /etc/shadow | sometimes * instead of x)
           Username

#Display current user and groupe names and IDs
id
#Output
uid=1000(john.wick) gid=1000(john.wick) groups=1000(john.wick)

#Display UID of user john.wick
id -u john.wick

#Display GID of user john.wick
id -g john.wick

#Display UID and all groups of user john.wick
id john.wick
#Output
#john.wick belongs to group ansible, admin
#We could have a group for windows, linux, network guys...
#Output
uid=1000(john.wick) gid=1000(john.wick) groups=1000(john.wick), 4(ansible), 5(admin)

#Display all groups john.wick belongs to
groups john.wick
#Output
john.wick : john.wick ansible admin

#Display groups names of user john.wick
id -ng john.wick
#OR
id -nG john.wick
#OR
id -nu john.wick

#Display all groups from system
#https://www.cyberciti.biz/faq/understanding-etcgroup-file/
cat /etc/group

#Display all users from a group ansible
grep '^ansible:.*$' /etc/group | cut -d: -f4

#Add a user to sudoers (1)
#No /etc/sudoers
#Install sudo
yum install sudo
#Now /etc/sudoers exists
visudo
#OR
#But be careful file in 440 (read-only)
vi /etc/sudoers

#CentOS 7 has a default group wheel
#Members of wheel are automatically sudo
#Decomment line %wheel if commented
%wheel        ALL=(ALL)       AL

#Add a user john.wick to group wheel
#Without removing from the group he is already in
usermod -aG wheel john.wick

#Add a user to sudoers (2)
#If no /etc/sudoers do (1)
#Now /etc/sudoers exists
visudo
#Add the following
root ALL=(ALL) ALL

john.wick ALL=(ALL) ALL


#Change username from john.wick to brian.mills
#Nothing else will be changed
#You should probably change the home directory name
usermod -l brian.mills john.wick

#Example :
    #Switch to user john.wick
    su - john.wick
    #List root home directory
    sudo ls -la /root
    #OR
    sudo whoami
        #Output
        root

#Change UID of user john.wick
#Must be unique, non negative
#Any files the user owns
#And located under the user's home directory tree rooted
#Will have the file UID changed automatically
#Files outside the user's home directory must be altered manually
usermod -u 1001 john.wick

#Change information about a user
chfn john.wick

#Display all users (only names)
cut -d: -f1 /etc/passwd

#Display the minimum UID for users (non system)
#Only those users can login into system
#Only if shell is bash/csh/tcsh/ksh... as defined in /etc/shells
#Example : UID_MIN = 1000 => users with UID => 1000 can login
grep "^UID_MIN" /etc/login.defs

#Display the maximum UID for users (non system)
grep "^UID_MAX" /etc/login.defs

#Display all users (non system)
#Only if shell is bash/csh/tcsh/ksh...
    l=$(grep "^UID_MIN" /etc/login.defs)
    l1=$(grep "^UID_MAX" /etc/login.defs)
    awk -F':' -v "min=${l##UID_MIN}" -v "max=${l1##UID_MAX}" '{ if ( $3 >= min && $3 <= max ) print $0}' /etc/passwd
#Output
    john.wick:x:1000:1000::/home/john.wick:/bin/bash
    brian.mills:x:1001:1001::/home/brian.mills:/bin/bash
q:q
#Check integrity of passw or shadow
pwck -r